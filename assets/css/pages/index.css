.socials-sidebar{top:42%;left:-6%}@media (max-width:1370px){.socials-sidebar{left:-3%}}@media (max-width:1280px){.socials-sidebar{display:block;left:0}}@media (max-width:1050px){.socials-sidebar{display:flex;top:87%;left:3%}}@media (max-width:1280px){.socials-sidebar__first{display:block}}@media (max-width:1050px){.socials-sidebar__first{display:flex}}@media (max-width:1280px){.socials-sidebar__second{display:block;margin-left:0;margin-top:31px}}@media (max-width:1050px){.socials-sidebar__second{display:flex;margin-top:0;margin-left:20px}}@media (max-width:1280px){.socials-sidebar__icon{margin-right:0;margin-bottom:12px}}@media (max-width:1050px){.socials-sidebar__icon{margin-bottom:0;margin-right:20px}.socials-sidebar__icon:last-child{margin-right:0}}@media (max-width:360px){.socials-sidebar__icon,.socials-sidebar__icon img{width:35px;height:35px}}.main-section{position:relative}@media (max-width:576px){.main-section{background:url(../../img/main-bg.png) no-repeat;background-size:cover;background-position:30% 0}}.main-section__background{position:absolute;top:0;left:44%;z-index:-1}@media (max-width:1050px){.main-section__background{left:24%}}@media (max-width:800px){.main-section__background{left:16%}}@media (max-width:576px){.main-section__background{display:none}}.main-section__content{margin-top:235px;margin-bottom:114px;margin-left:121px}@media (max-width:1050px){.main-section__content{margin-left:0}}@media (max-width:576px){.main-section__content{margin-top:125px}}.main-section__main-title{font-weight:800;font-size:60px;line-height:78px;text-transform:uppercase;background:radial-gradient(#000,rgba(0,0,0,.56));-webkit-text-fill-color:transparent;-webkit-background-clip:text;background-clip:text}@media (max-width:576px){.main-section__main-title{font-size:48px;line-height:60px}}.main-section__subtitle{font-size:18px;line-height:23px;margin-top:45px;width:33%;color:#000}@media (max-width:576px){.main-section__subtitle{width:75%;font-weight:400}}.aside__feed{margin-top:241px}@media (max-width:800px){.aside__feed{margin-top:80px}}@media (max-width:576px){.aside{margin-top:60px}}.main-news{margin-top:65px}@media (max-width:576px){.main-news{margin-top:0}}.main-news .container{display:flex}@media (max-width:576px){.main-news .container{flex-wrap:wrap}}.main-news__popular{margin-top:80px}@media (max-width:1050px){.main-news__popular .news-large-item{height:24vw}}@media (max-width:800px){.main-news__popular .news-large-item{height:31vw}}@media (max-width:576px){.main-news__popular .news-large-item{height:61vw;width:100%;margin-top:20px}.main-news__popular .news-large-item:first-child{margin-top:0}}@media (max-width:800px){.main-news__popular{width:141%}}@media (max-width:576px){.main-news__popular{width:100%;margin-top:60px}}@media (max-width:1050px){.main-news__near-aside{width:75%}}@media (max-width:576px){.main-news__near-aside{width:100%;margin-top:60px}}.popular-news{margin-top:80px}.popular-news .container{display:flex}.breaking-news{margin-top:80px}@media (max-width:576px){.breaking-news{margin-top:60px}}.breaking-news .container{width:1320px;left:2%}@media (max-width:1370px){.breaking-news .container{left:3%}}@media (max-width:1050px){.breaking-news .container{width:100%;left:0}}.breaking-news__block{margin-top:40px;display:flex;justify-content:space-between}.breaking-news__item{width:315px;height:100px;background:#f8f9fa;padding:14px 20px;display:flex}.breaking-news__item img{width:59px!important;height:59px;border-radius:50%}.breaking-news__descr{margin-left:19px}.breaking-news__topic{font-size:10px;line-height:130%;font-weight:600;font-style:italic}.breaking-news__title{font-size:16px;line-height:110%;margin-top:4px}.breaking-news__info{margin-top:6px;display:flex}.breaking-news__info .date{margin-left:24px;margin-right:0}.breaking-news__info .views{margin-left:24px}.media-block{margin-top:100px;margin-bottom:170px}@media (max-width:800px){.media-block{margin-bottom:80px}}@media (max-width:576px){.media-block{margin-top:60px;margin-bottom:60px}}.media-block__descr{margin-top:20px;display:flex;align-items:flex-start;justify-content:space-between}@media (max-width:576px){.media-block__descr{flex-wrap:wrap}}@media (max-width:576px){.media-block__descr .btn{margin-top:20px}}.media-block__descr-text{font-size:18px;width:37%}@media (max-width:576px){.media-block__descr-text{width:88%}}.media-block .grid{width:1240px;position:relative;margin-top:80px}@media (max-width:1050px){.media-block .grid{width:100%}}@media (max-width:576px){.media-block .grid{margin-top:60px}}.media-block .grid .col{display:flex;flex-wrap:wrap;justify-content:space-between;width:49%}@media (max-width:576px){.media-block .grid .col{width:100%}}.media-block .grid .block{display:flex;justify-content:space-between;opacity:0;position:relative;top:40px;transform:scale(.9)}@media (max-width:1050px){.media-block .grid .block{flex-wrap:wrap}}.media-block .grid .block.animate{opacity:1;top:0;transition:all .3s ease-in-out;transform:scale(1)}.media-block .grid .grid-item{cursor:pointer;position:relative}.media-block .grid .grid-item:hover img{transform:scale(115%);transition:all .3s ease-out}.media-block .grid .grid-item img{transition:all .3s ease-out}.media-block .grid .grid-item__content{position:absolute;width:100%;height:100%;top:0;left:0;background:linear-gradient(0deg,rgba(0,0,0,.3),rgba(0,0,0,.3))}.media-block .grid .grid-item__bottom{position:absolute;width:100%;bottom:0;padding:15px 20px}.media-block .grid .grid-item__date{width:100%;font-size:14px;line-height:130%;color:#fff;height:fit-content}.media-block .grid .grid-item__title{width:100%;margin-top:9px;font-size:16px;line-height:130%;font-weight:400;color:#fff;width:80%}@media (max-width:800px){.media-block .grid .grid-item__title{width:100%}}@media (max-width:360px){.media-block .grid .grid-item__title{font-size:14px}}.media-block .grid .grid-item__topics{margin-top:9px;width:100%}.media-block .grid .grid-item1{width:48%;height:269px;background-color:#efefef;display:inline-block;margin-bottom:20px;overflow:hidden}@media (max-width:1050px){.media-block .grid .grid-item1{height:21vw}}@media (max-width:576px){.media-block .grid .grid-item1{width:100%;height:88vw}}.media-block .grid .grid-item1 img,.media-block .grid .grid-item1 video{width:100%}.media-block .grid .grid-item2{width:100%;height:580px;background-color:#efefef;margin-bottom:20px;overflow:hidden}@media (max-width:1050px){.media-block .grid .grid-item2{height:44.6vw}}@media (max-width:576px){.media-block .grid .grid-item2{height:85vw}}.media-block .grid .grid-item2 .grid-item__title{font-size:24px}@media (max-width:360px){.media-block .grid .grid-item2 .grid-item__title{font-size:20px}}.media-block .grid .grid-item2 img,.media-block .grid .grid-item2 video{width:171%;position:relative;left:-37%}.media-block .grid .grid-item3{width:100%;height:290px;background-color:#efefef;margin-bottom:20px;overflow:hidden}@media (max-width:1050px){.media-block .grid .grid-item3{height:21vw}}@media (max-width:576px){.media-block .grid .grid-item3{height:43vw}}.media-block .grid .grid-item3 img,.media-block .grid .grid-item3 video{width:100%}.media-block .btn{margin-top:20px}.news-slider{margin-bottom:60px}.news-slider .container{display:flex}@media (max-width:800px){.news-slider .container{flex-wrap:wrap}}.news-slider__descr{width:295px;position:relative}@media (max-width:1050px){.news-slider__descr{width:36%}}@media (max-width:800px){.news-slider__descr{width:50%}}@media (max-width:576px){.news-slider__descr{width:100%}}.news-slider__descr:before{content:"";background-color:#f8f9fa;height:282px;position:absolute;width:648px;left:-120%;z-index:-1}@media (max-width:1050px){.news-slider__descr:before{left:-82%}}@media (max-width:800px){.news-slider__descr:before{left:-79%}}@media (max-width:576px){.news-slider__descr:before{left:-7%;width:120%}}.news-slider__title{margin-top:27px}.news-slider__descr-text{font-size:18px;margin-top:20px;margin-bottom:40px;width:85%}.news-slider__preview{margin-left:20px;width:924px}@media (max-width:1050px){.news-slider__preview{width:60%}}@media (max-width:800px){.news-slider__preview{width:100%;margin-top:60px;margin-left:0}}.news-slider__preview .news-item{width:295px}@media (max-width:576px){.news-slider__preview .news-item__img-block{height:56vw}}.news-slider__preview .owl-nav{position:absolute;top:46.4%;left:-19%}@media (max-width:1050px){.news-slider__preview .owl-nav{top:50.4%;left:-26%}}@media (max-width:800px){.news-slider__preview .owl-nav{top:-100px;left:25%}}@media (max-width:576px){.news-slider__preview .owl-nav{left:60%}}.news-slider .owl-carousel .owl-nav button.owl-prev{margin-right:34px}.news-slider .owl-carousel .owl-nav button.owl-next,.news-slider .owl-carousel .owl-nav button.owl-prev{width:40px;height:40px;border:1px solid #000;color:#252733;font-size:0;background:url(../../img/left-chevr.svg) no-repeat;background-position:50% 50%}.news-slider .owl-carousel .owl-nav button.owl-next{transform:rotate(180deg)}.news-slider .owl-carousel .owl-item img{display:inline-block;width:auto}.faq{margin-top:100px}@media (max-width:576px){.faq{margin-top:60px}}.faq__descr{margin-top:20px;display:flex;align-items:flex-start;justify-content:space-between}@media (max-width:576px){.faq__descr{flex-wrap:wrap}}@media (max-width:576px){.faq__descr .btn{margin-top:20px}}.faq__descr-text{font-size:18px;width:37%}@media (max-width:1050px){.faq__descr-text{width:50%}}@media (max-width:576px){.faq__descr-text{width:88%}}.faq__tabs-wrap{margin-top:40px}.faq__accordion{margin-top:34px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
